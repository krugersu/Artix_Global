:orphan:



2. Кассовые смены
-----------------


При первом запуске программы происходит инициализация счетчиков кассовых смен.

.. todo:: 

    Проверить насколько это актуально в связи с переходом учета кассовых смен в БД

.. code-block:: Python
    :linenos:

    """ Main program entry. """
    # Если это первый запуск системы
    if not os.path.exists(fileinit):
        logger.info("First start programs")
        with open(fileinit, 'w', encoding='utf-8') as outfile:
            outfile.write('')    
            init_pr()    

Инициализируется объект для работы с БД MySQL.

.. code-block:: Python

    tData = dbMysql.workDb(rc)

В момент инициализации открывается соединение с базой данных (1)  MySQL кассового сервера и создается
курсор (5), так же инициализируется соединение со служебной базой данных SQlite (6).

.. ////

.. todo:: 

    Убрать второе соедение с MySQL в процедуру инициализации в модуле  db.

.. code-block:: Python
    :linenos:
    :caption: module: dbMysql.py

    self.mydb = pymysql.connect(host=rc._sections.artix.server_ip,
                                    database=rc._sections.artix.database,
                                    user=rc._sections.artix.user,
                                    passwd=rc._sections.artix.passwd)
        self._mycursor = self.mydb.cursor()  # cursor created
        self.tData = db.workDb(rc)


Создается объект "запрос" для работы с http-запросами.

.. code-block:: Python

    rec_con = request.req1C(rc)

Возвращается список открытых смен с последнего зафиксированого ID смены.

.. code-block:: Python

    l_workshift_open = tData.get_last_workshift_open(rc)

Запросом ка БД кассового сервера возвращается таблица содержащая данные открытых кассовых смен,
у которых ID больше зафиксированного.


.. code-block:: Python
    :linenos:
    :caption: module: dbMysql.py

    def get_last_workshift_open(self,rc):
        l_date = self.load_last_date_open()
        self._mycursor.execute(diff_data.qrSelect_workshift_open, [l_date])
        l_workshift = self._mycursor.fetchall()
        
        self.tData.get_workshiftid(l_workshift)
        with open('data_open.json', 'w', encoding='utf-8') as f:
            json.dump(l_workshift, f, ensure_ascii=False,
                    indent=4,  default=str)

        return l_workshift

ID открытых кассовых смен из таблицы с данными добавляются в БД SQlite для дальнейшего анализа.


.. code-block:: Python
    :linenos:
    :caption: module: db.py

    def get_workshiftid(self,l_workshift):
        # Формируем список номеров открытых кассовых смен для добавление в БД
        l_wsh = []
        for row in l_workshift:
            l_wsh.append(row[4])
        print(l_wsh)
        self.add_open_workshift(l_wsh)
